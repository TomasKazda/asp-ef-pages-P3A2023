// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using asp_ef_pages.Data;

#nullable disable

namespace asp_ef_pages.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20240220093412_01all")]
    partial class _01all
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("ClassSubject", b =>
                {
                    b.Property<int>("Classes2Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Subjects2Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Classes2Id", "Subjects2Id");

                    b.HasIndex("Subjects2Id");

                    b.ToTable("ClassSubject");
                });

            modelBuilder.Entity("asp_ef_pages.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "P3A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "P4"
                        });
                });

            modelBuilder.Entity("asp_ef_pages.Models.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ClassId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StudentEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId");

                    b.HasIndex("ClassId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("15e78531-25fb-4d3d-af0e-7b09049a8a2c"),
                            ClassId = 1,
                            StudentName = "Alice"
                        },
                        new
                        {
                            StudentId = new Guid("92ddaf81-1bf7-4168-a649-12480084b09b"),
                            ClassId = 1,
                            StudentName = "Bob"
                        },
                        new
                        {
                            StudentId = new Guid("973c0e69-0984-4e03-8fa6-ecbc93f78d1e"),
                            ClassId = 2,
                            StudentName = "Charlie"
                        });
                });

            modelBuilder.Entity("asp_ef_pages.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mathematics",
                            ShortName = "MAT"
                        },
                        new
                        {
                            Id = 2,
                            Name = "English",
                            ShortName = "ANJ"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Web application",
                            ShortName = "WEB"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Multiplatform app",
                            ShortName = "MPA"
                        });
                });

            modelBuilder.Entity("asp_ef_pages.Models.SubjectOnClass", b =>
                {
                    b.Property<int>("ClassId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LinkId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("TEXT");

                    b.HasKey("ClassId", "SubjectId");

                    b.HasIndex("LinkId")
                        .IsUnique();

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("SubjectsOnClasses");

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            SubjectId = 1,
                            LinkId = 1,
                            TeacherId = new Guid("17b366f0-a169-4340-bddb-284af3ff6dc6")
                        },
                        new
                        {
                            ClassId = 1,
                            SubjectId = 2,
                            LinkId = 2,
                            TeacherId = new Guid("17b366f0-a169-4340-bddb-284af3ff6dc6")
                        },
                        new
                        {
                            ClassId = 1,
                            SubjectId = 3,
                            LinkId = 3,
                            TeacherId = new Guid("17b366f0-a169-4340-bddb-284af3ff6dc6")
                        },
                        new
                        {
                            ClassId = 2,
                            SubjectId = 1,
                            LinkId = 4,
                            TeacherId = new Guid("17b366f0-a169-4340-bddb-284af3ff6dc6")
                        });
                });

            modelBuilder.Entity("asp_ef_pages.Models.Teacher", b =>
                {
                    b.Property<Guid>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("MentorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("TeacherId");

                    b.HasIndex("MentorId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherId = new Guid("17b366f0-a169-4340-bddb-284af3ff6dc6"),
                            Name = "Mr. Smith"
                        },
                        new
                        {
                            TeacherId = new Guid("e41fb9e4-1d7c-4c5a-a692-248d993c23c8"),
                            Name = "Mrs. Johnson"
                        },
                        new
                        {
                            TeacherId = new Guid("6b7462cb-3869-4199-ae27-10a13eb51728"),
                            MentorId = new Guid("17b366f0-a169-4340-bddb-284af3ff6dc6"),
                            Name = "Mrs. Newbie"
                        });
                });

            modelBuilder.Entity("ClassSubject", b =>
                {
                    b.HasOne("asp_ef_pages.Models.Class", null)
                        .WithMany()
                        .HasForeignKey("Classes2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_ef_pages.Models.Subject", null)
                        .WithMany()
                        .HasForeignKey("Subjects2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("asp_ef_pages.Models.Student", b =>
                {
                    b.HasOne("asp_ef_pages.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("asp_ef_pages.Models.SubjectOnClass", b =>
                {
                    b.HasOne("asp_ef_pages.Models.Class", "Class")
                        .WithMany("Subjects")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_ef_pages.Models.Subject", "Subject")
                        .WithMany("Classes")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("asp_ef_pages.Models.Teacher", null)
                        .WithMany("Subjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("asp_ef_pages.Models.Teacher", b =>
                {
                    b.HasOne("asp_ef_pages.Models.Teacher", "Mentor")
                        .WithMany("Mentoring")
                        .HasForeignKey("MentorId");

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("asp_ef_pages.Models.Class", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("asp_ef_pages.Models.Subject", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("asp_ef_pages.Models.Teacher", b =>
                {
                    b.Navigation("Mentoring");

                    b.Navigation("Subjects");
                });
#pragma warning restore 612, 618
        }
    }
}
